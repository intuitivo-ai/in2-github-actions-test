name: Deploy to Critical Environments

on:
  workflow_dispatch:
    inputs:
      ACTION:
        description: ""
        required: true
        default: plan
        type: choice
        options:
          - plan
          - deploy
      ENVIRONMENT:
        description: ""
        required: true
        default: showroom
        type: choice
        options:
          - production
          - showroom
      INFRACOST:
        description: Infracost Report
        required: false
        default: false
        type: choice
        options:
        - 'true'
        - 'false'

jobs:
  config:
    name: Config
    uses: ./.github/workflows/pre.yml
    with:
      DEFAULT_ENVIRONMENT: showroom
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  request_approval_deploy:
    name: Request Approval Deploy
    needs:
    - config
    uses: ./.github/workflows/request-approval-deploy.yml
    with:
      AWS_REGION: us-east-1
      ENVIRONMENT: ${{ needs.config.outputs.environment }}
      WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  production_plan:
    if: ${{ needs.config.outputs.environment == 'production' }}
    name: Production
    strategy:
      fail-fast: false
      matrix:
        env: [ production ]
        region:
          - us-east-1
          - sa-east-1
    needs:
      - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{matrix.region}}
      ENVIRONMENT: ${{matrix.env}}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  production_infracost:
    if: ${{ inputs.INFRACOST }}
    name: Production
    strategy:
      fail-fast: false
      matrix:
        env: [ production ]
        region:
          - us-east-1
          - sa-east-1
    needs:
      - production_plan
    uses: ./.github/workflows/infracost-report.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      RUN: ${{ inputs.INFRACOST }}
      TF_PATH: terraform
    secrets:
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  production_pre_deploy:
    if: ${{ inputs.ACTION == 'deploy' && github.ref_name == 'main' && github.ref_type == 'branch' && needs.config.outputs.environment == 'production' }}
    name: Production
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env: [ production ]
        region:
          - us-east-1
          - sa-east-1
    needs:
      - config
      - production_plan
      - request_approval_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: pre
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  production_deploy:
    if: ${{ inputs.ACTION == 'deploy' && github.ref_name == 'main' && github.ref_type == 'branch' && needs.config.outputs.environment == 'production' }}
    name: Production
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env: [ production ]
        region:
          - us-east-1
          - sa-east-1
    needs:
      - config
      - production_plan
      - production_pre_deploy
    uses: ./.github/workflows/terraform-apply.yml
    with:
      AWS_REGION: ${{matrix.region}}
      ENVIRONMENT: ${{matrix.env}}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  production_post_deploy:
    if: ${{ inputs.ACTION == 'deploy' && github.ref_name == 'main' && github.ref_type == 'branch' && needs.config.outputs.environment == 'production' && always() && needs.production_deploy.result != 'skipped' }}
    name: Production
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env: [ production ]
        region:
          - us-east-1
          - sa-east-1
    needs:
      - config
      - production_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: post
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  showroom_plan:
    if: ${{ needs.config.outputs.environment == 'showroom' }}
    name: Showroom
    strategy:
      fail-fast: false
      matrix:
        env: [ showroom ]
        region:
          - us-east-1
    needs:
      - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{matrix.region}}
      ENVIRONMENT: ${{matrix.env}}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  showroom_infracost:
    if: ${{ inputs.INFRACOST }}
    name: Showroom
    strategy:
      fail-fast: false
      matrix:
        env: [ showroom ]
        region:
          - us-east-1
    needs:
      - showroom_plan
    uses: ./.github/workflows/infracost-report.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      RUN: ${{ inputs.INFRACOST }}
      TF_PATH: terraform
    secrets:
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  showroom_pre_deploy:
    if: ${{ inputs.ACTION == 'deploy' && github.ref_name == 'main' && github.ref_type == 'branch' && needs.config.outputs.environment == 'showroom' }}
    name: Showroom
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env: [ showroom ]
        region:
          - us-east-1
    needs:
      - config
      - showroom_plan
      - request_approval_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: pre
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  showroom_deploy:
    if: ${{ inputs.ACTION == 'deploy' && github.ref_name == 'main' && github.ref_type == 'branch' && needs.config.outputs.environment == 'showroom' }}
    name: Showroom
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env: [ showroom ]
        region:
          - us-east-1
    needs:
      - config
      - showroom_plan
      - showroom_pre_deploy
    uses: ./.github/workflows/terraform-apply.yml
    with:
      AWS_REGION: ${{matrix.region}}
      ENVIRONMENT: ${{matrix.env}}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  showroom_post_deploy:
    if: ${{ inputs.ACTION == 'deploy' && github.ref_name == 'main' && github.ref_type == 'branch' && needs.config.outputs.environment == 'showroom' && always() && needs.showroom_deploy.result != 'skipped' }}
    name: Showroom
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env: [ showroom ]
        region:
          - us-east-1
    needs:
      - config
      - showroom_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: post
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  release:
    name: Release
    needs:
      - production_deploy
    uses: ./.github/workflows/create-release-prod.yml