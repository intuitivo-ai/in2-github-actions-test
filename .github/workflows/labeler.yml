name: "Pull Request Labeler"
on:
  pull_request_target:

env:
  AWS_REGION: us-east-2

jobs:
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: aws sts get-caller-identity
      - name: describe-findings
        run: |
          COMMIT_ID="47fbfa71a345d146e4fa74d43f734d50e1d08c21"
          ORG="${GITHUB_REPOSITORY_OWNER}"
          REPOSITORY=$(echo "${GITHUB_REPOSITORY}" | sed "s|${ORG}/||g")
          aws ecr describe-image-scan-findings --repository-name $REPOSITORY --image-id imageTag=$COMMIT_ID --output json > .docker.json
      - id: catjq
        run: |
          finding=$(cat ./.docker.json | jq .imageScanFindings.findingSeverityCounts)
          finding=$(echo $finding)
          echo "::set-output name=finding::$finding"
      - run: |
          echo ${{ toJSON( steps.catjq.outputs.finding ) }}
          CRITICAL=`echo ${{ toJSON( steps.catjq.outputs.finding ) }} | jq .CRITICAL`
          HIGH=`echo     ${{ toJSON( steps.catjq.outputs.finding ) }} | jq .HIGH`
          MEDIUM=`echo   ${{ toJSON( steps.catjq.outputs.finding ) }} | jq .MEDIUM`
          LOW=`echo      ${{ toJSON( steps.catjq.outputs.finding ) }} | jq .LOW`

          echo CRITICAL=$CRITICAL
          echo HIGH=$HIGH
          echo MEDIUM=$MEDIUM
          echo LOW=$LOW

          if [ "${CRITICAL}" != "null" ] && [ ${CRITICAL} -gt 0 ]; then touch .docker.critical; fi
          if [ "${HIGH}"     != "null" ] && [ ${HIGH}     -gt 0 ]; then touch .docker.high; fi
          if [ "${MEDIUM}"   != "null" ] && [ ${MEDIUM}   -gt 0 ]; then touch .docker.medium; fi
          if [ "${LOW}"      != "null" ] && [ ${LOW}      -gt 0 ]; then touch .docker.low; fi

          ls -la

      - uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
