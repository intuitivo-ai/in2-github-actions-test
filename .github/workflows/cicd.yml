name: Continuous Delivery
'on':
  push:
    branches-ignore:
    - infra-updates*
  workflow_dispatch:
    inputs:
      ACTION:
        description: ''
        required: true
        default: plan
        type: choice
        options:
        - plan
        - deploy
      ENVIRONMENT:
        description: ''
        required: false
        default: staging
        type: choice
        options:
        - development
        - devops-sandbox
        - staging
      TESTS:
        description: Run tests
        required: false
        default: true
        type: choice
        options:
        - 'true'
        - 'false'
      INFRACOST:
        description: Infracost Report
        required: false
        default: true
        type: choice
        options:
        - 'true'
        - 'false'
jobs:
  config:
    name: Config
    uses: ./.github/workflows/pre.yml
    with:
      DEFAULT_ENVIRONMENT: staging
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  build:
    name: Build
    needs:
    - config
    uses: ./.github/workflows/docker-build-and-push.yml
    with:
      AWS_REGION: us-east-1
      PUBLISH: true
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGISTRY: ${{ secrets.ECR_REGISTRY }}
  test:
    name: Tests
    needs:
    - build
    uses: ./.github/workflows/unit-tests.yml
    with:
      AWS_REGION: us-east-1
      RUN: ${{ inputs.TESTS }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGISTRY: ${{ secrets.ECR_REGISTRY }}
  migrations:
    name: Tests
    needs:
    - build
    uses: ./.github/workflows/migrations.yml
    with:
      AWS_REGION: us-east-1
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGISTRY: ${{ secrets.ECR_REGISTRY }}
  request_approval_deploy:
    name: Request Approval Deploy
    needs:
    - config
    uses: ./.github/workflows/request-approval-deploy.yml
    with:
      AWS_REGION: us-east-1
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  development_plan:
    if: ${{ ( github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name == 'main' ) || ( inputs.ACTION && needs.config.outputs.environment == 'development' ) }}
    name: Development
    strategy:
      fail-fast: false
      matrix:
        env:
        - development
        region:
        - us-east-1
        - sa-east-1
    needs:
    - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  development_infracost:
    if: ${{ inputs.INFRACOST == 'true' }}
    name: Development
    strategy:
      fail-fast: false
      matrix:
        env:
        - development
        region:
        - us-east-1
        - sa-east-1
    needs:
    - development_plan
    uses: ./.github/workflows/infracost-report.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
      RUN: ${{ inputs.INFRACOST }}
    secrets:
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  development_pre_deploy:
    if: ${{ ( github.event_name == 'push' && github.ref_name == 'dev' ) || ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'development' ) }}
    name: Development
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - development
        region:
        - us-east-1
        - sa-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - development_plan
    - request_approval_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: pre
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  development_deploy:
    if: ${{ ( github.event_name == 'push' && github.ref_name == 'dev' ) || ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'development' ) }}
    name: Development
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - development
        region:
        - us-east-1
        - sa-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - development_plan
    - development_pre_deploy
    uses: ./.github/workflows/terraform-apply.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  development_post_deploy:
    if: ${{ ( github.event_name == 'push' && github.ref_name == 'dev' && always() && needs.development_deploy.result != 'skipped' ) || ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'development' && always() && needs.development_deploy.result != 'skipped' ) }}
    name: Development
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - development
        region:
        - us-east-1
        - sa-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - development_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: post
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  devops-sandbox_plan:
    if: ${{ ( github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name == 'main' ) || ( inputs.ACTION && needs.config.outputs.environment == 'devops-sandbox' ) }}
    name: Devops-sandbox
    strategy:
      fail-fast: false
      matrix:
        env:
        - devops-sandbox
        region:
        - us-east-1
    needs:
    - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  devops-sandbox_infracost:
    if: ${{ inputs.INFRACOST == 'true' }}
    name: Devops-sandbox
    strategy:
      fail-fast: false
      matrix:
        env:
        - devops-sandbox
        region:
        - us-east-1
    needs:
    - devops-sandbox_plan
    uses: ./.github/workflows/infracost-report.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
      RUN: ${{ inputs.INFRACOST }}
    secrets:
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  devops-sandbox_pre_deploy:
    if: ${{ ( github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name == 'main' ) || ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'devops-sandbox' ) }}
    name: Devops-sandbox
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - devops-sandbox
        region:
        - us-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - devops-sandbox_plan
    - request_approval_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: pre
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  devops-sandbox_deploy:
    if: ${{ ( github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name == 'main' ) || ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'devops-sandbox' ) }}
    name: Devops-sandbox
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - devops-sandbox
        region:
        - us-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - devops-sandbox_plan
    - devops-sandbox_pre_deploy
    uses: ./.github/workflows/terraform-apply.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  devops-sandbox_post_deploy:
    if: ${{ ( github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name == 'main' && always() && needs.devops-sandbox_deploy.result != 'skipped' ) || ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'devops-sandbox' && always() && needs.devops-sandbox_deploy.result != 'skipped' ) }}
    name: Devops-sandbox
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - devops-sandbox
        region:
        - us-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - devops-sandbox_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: post
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  staging_plan:
    if: ${{ ( github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name == 'main' ) || ( inputs.ACTION && needs.config.outputs.environment == 'staging' ) }}
    name: Staging
    strategy:
      fail-fast: false
      matrix:
        env:
        - staging
        region:
        - us-east-1
        - sa-east-1
    needs:
    - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  staging_infracost:
    if: ${{ inputs.INFRACOST == 'true' }}
    name: Staging
    strategy:
      fail-fast: false
      matrix:
        env:
        - staging
        region:
        - us-east-1
        - sa-east-1
    needs:
    - staging_plan
    uses: ./.github/workflows/infracost-report.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
      RUN: ${{ inputs.INFRACOST }}
    secrets:
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
  staging_pre_deploy:
    if: ${{ ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'staging' ) }}
    name: Staging
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - staging
        region:
        - us-east-1
        - sa-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - staging_plan
    - request_approval_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: pre
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  staging_deploy:
    if: ${{ ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'staging' ) }}
    name: Staging
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - staging
        region:
        - us-east-1
        - sa-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - staging_plan
    - staging_pre_deploy
    uses: ./.github/workflows/terraform-apply.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  staging_post_deploy:
    if: ${{ ( github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name == 'main' && always() && needs.staging_deploy.result != 'skipped' ) || ( inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'staging' && always() && needs.staging_deploy.result != 'skipped' ) }}
    name: Staging
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        env:
        - staging
        region:
        - us-east-1
        - sa-east-1
    needs:
    - config
    - build
    - test
    - migrations
    - staging_deploy
    uses: ./.github/workflows/pre-post-deploy.yml
    with:
      ACTION: post
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
  critical_plan:
    if: ${{ ( github.ref_type == 'branch' && github.event_name == 'push' && github.ref_name == 'main' ) }}
    name: Critical Environments
    strategy:
      fail-fast: false
      matrix:
        env:
        - production
        - showroom
        region:
        - sa-east-1
        - us-east-1
    needs:
    - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
