name: Continuous Delivery

on:
  push:
    branches:
      - main
      - INFRA-*
  workflow_dispatch:
    inputs:
      ACTION:
        description: ""
        required: true
        default: plan
        type: choice
        options:
          - plan
          - deploy
      ENVIRONMENT:
        description: ""
        required: false
        default: staging
        type: choice
        options:
          - development
          - staging
      TESTS:
        description: "Run tests"
        required: false
        default: true
        type: choice
        options:
          - true
          - false

jobs:
  config:
    name: Config
    uses: ./.github/workflows/pre.yml
    with:
      DEFAULT_ENVIRONMENT: staging
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  build:
    needs: config
    name: Build
    uses: ./.github/workflows/docker-build-and-push.yml
    with:
      AWS_REGION: us-east-1
      CHECKOUT_IN2_REPOSITORIES: true
      CHECKOUT_IN2_REPOSITORY_NAMES: in2-react-components
      CLEAR_CACHE: true
      PUBLISH: true
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGISTRY: ${{ secrets.ECR_REGISTRY }}
      TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test:
    needs: build
    name: Tests
    uses: ./.github/workflows/unit-tests.yml
    with:
      AWS_REGION: us-east-1
      CLEAR_CACHE: true
      RUN: ${{ inputs.TESTS }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGISTRY: ${{ secrets.ECR_REGISTRY }}
  migrations:
    needs: build
    name: Tests
    uses: ./.github/workflows/migrations.yml
    with:
      AWS_REGION: us-east-1
      CLEAR_CACHE: true
      RUN_MIGRATIONS: true
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGISTRY: ${{ secrets.ECR_REGISTRY }}
  development_plan:
    if: ${{ (github.event_name == 'push' || needs.config.outputs.environment == 'development') }}
    name: Development
    strategy:
      fail-fast: false
      matrix:
        env: [ development ]
        region: [ us-east-1,sa-east-1 ]
    needs:
      - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      LAMBDA: true
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  development_deploy:
    if: ${{ (inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'development') || (github.event_name == 'push' && github.ref_name == 'dev') }}
    name: Development
    strategy:
      fail-fast: false
      matrix:
        env: [ development ]
        region: [ us-east-1,sa-east-1 ]
    needs:
      - config
      - development_plan
      - build
      - test
      - migrations
    uses: ./.github/workflows/terraform-apply.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      LAMBDA: true
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  staging_plan:
    if: ${{ (github.event_name == 'push' || needs.config.outputs.environment == 'staging') }}
    name: Staging
    strategy:
      fail-fast: false
      matrix:
        env: [ staging ]
        region: [ us-east-1,sa-east-1 ]
    needs:
      - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      LAMBDA: true
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  staging_deploy:
    if: ${{ (inputs.ACTION == 'deploy' && needs.config.outputs.environment == 'staging') || ( github.event_name == 'push' && github.ref_type == 'branch' && github.ref_name == 'main' ) }}
    name: Staging
    strategy:
      fail-fast: false
      matrix:
        env: [ staging ]
        region: [ us-east-1,sa-east-1 ]
    needs:
      - config
      - staging_plan
      - build
      - test
      - migrations
    uses: ./.github/workflows/terraform-apply.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      LAMBDA: true
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  critical_plan:
    if: ${{ github.event_name == 'push' }}
    strategy:
      fail-fast: false
      matrix:
        env: [ production,showroom ]
        region: [ us-east-1,sa-east-1 ]
    name: Critical Environments
    needs:
      - config
    uses: ./.github/workflows/terraform-plan.yml
    with:
      AWS_REGION: ${{ matrix.region }}
      ENVIRONMENT: ${{ matrix.env }}
      LAMBDA: true
      TF_PATH: terraform
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
