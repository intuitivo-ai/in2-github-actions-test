name: Unit-Tests

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      CLEAR_CACHE:
        required: false
        type: boolean
        default: false
      RUN:
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      REGISTRY:
        required: true

env:
  DEFAULT_DOCKER_TAG: ${{ github.repository }}
  REGISTRY: ${{ secrets.REGISTRY }}

jobs:
  run-unit-tests:
    runs-on: [ self-hosted, linux ]
    name: Unit-Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Run tests
        if: ${{ inputs.RUN != 'false' }}
        run: |
          COMMIT_ID="${GITHUB_SHA}"
          ORG="${GITHUB_REPOSITORY_OWNER}"
          REPOSITORY=$(echo "${GITHUB_REPOSITORY}" | sed "s|${ORG}/||g")

          docker pull ${{ secrets.REGISTRY }}/${REPOSITORY}:${GITHUB_SHA}
          docker tag  ${{ secrets.REGISTRY }}/${REPOSITORY}:${GITHUB_SHA} $DEFAULT_DOCKER_TAG
          docker run --rm --entrypoint "" ${{ secrets.REGISTRY }}/${REPOSITORY}:${GITHUB_SHA} scripts/run_tests.sh
      - name: Clear images
        if: ${{ inputs.CLEAR_CACHE }}
        run: |
          IMAGE_ID=$(docker images -q $DEFAULT_DOCKER_TAG)
          docker rmi -f $IMAGE_ID
