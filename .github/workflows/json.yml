name: "Json"
on:
  push:

env:
  AWS_REGION: us-east-2

jobs:
#  job1:
#    runs-on: ubuntu-latest
#    outputs:
#      matrix: ${{ steps.set-matrix.outputs.matrix }}
#    steps:
#      - id: set-matrix
#        run: |
#          echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
#  job2:
#    needs: job1
#    runs-on: ubuntu-latest
#    strategy:
#      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}
#    steps:
#      - run: echo ${{ fromJSON(needs.job1.outputs.matrix) }}
#      - run: echo ${{ fromJSON(needs.job1.outputs.matrix).include }}
#      - run: echo ${{ fromJSON(needs.job1.outputs.matrix).include[0] }}
#      - run: echo ${{ fromJSON(needs.job1.outputs.matrix).include[0].project }}
#      - run: echo ${{ fromJSON(needs.job1.outputs.matrix).include[1] }}
#      - run: echo ${{ fromJSON(needs.job1.outputs.matrix).include[1].project }}
  triage:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: aws sts get-caller-identity
      - name: describe-findings
        run: |
          COMMIT_ID="47fbfa71a345d146e4fa74d43f734d50e1d08c21"
          ORG="${GITHUB_REPOSITORY_OWNER}"
          REPOSITORY=$(echo "${GITHUB_REPOSITORY}" | sed "s|${ORG}/||g")
          aws ecr describe-image-scan-findings --repository-name $REPOSITORY --image-id imageTag=$COMMIT_ID --output json > .docker.json
      - id: cat
        run: |
          cat ./.docker.json
      - id: catjq
        run: |
          finding=$(cat ./.docker.json | jq .imageScanFindings.findingSeverityCounts)
          echo "::set-output name=finding::$finding"
      - id: set_var
        run: |
          content=$(cat ./.docker.json)
          content=$(echo $content)
          echo $content

          echo "::set-output name=packageJson::$content"
      - run: |
          echo ${{ steps.catjq.outputs.finding }}
          CRITICAL=`echo ${{ steps.catjq.outputs.finding }} | jq .CRITICAL`
          HIGH=`echo     ${{ steps.catjq.outputs.finding }} | jq .HIGH`
          MEDIUM=`echo   ${{ steps.catjq.outputs.finding }} | jq .MEDIUM`
          LOW=`echo      ${{ steps.catjq.outputs.finding }} | jq .LOW`
          echo CRITICAL=$CRITICAL
          echo HIGH=$HIGH
          echo MEDIUM=$MEDIUM
          echo LOW=$LOW

