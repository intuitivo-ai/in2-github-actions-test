name: Comment on Pull Request

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  
  scan_report:
    runs-on: [ self-hosted, linux ]
    name: Scan Container Image Vulnerabilities
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Vulnerability Report
        id: ecr_report
        run: |
          ./scripts/vulnerabilities_report_pr.sh
      - name: Delete old PR Comments
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
            });
            
            const botComments = comments.filter(comment => comment.user.login === "github-actions[bot]");
            
            botComments.forEach(botComment => {
              github.rest.issues.deleteComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo
              });
            });
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = "Gracias por la actualizaci√≥n. Estoy revisando los cambios. :+1:";
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{steps.ecr_report.outputs.ecr_report}}'
            })

